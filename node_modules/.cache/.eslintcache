[{"C:\\xnode\\apps\\YouMayNeedThis\\src\\index.js":"1","C:\\xnode\\apps\\YouMayNeedThis\\src\\App.js":"2","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\Navbar\\Navbar.js":"3","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\CartWidget\\CartWidget.js":"4","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\ItemCount\\ItemCount.js":"5","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\ItemList\\ItemList.js":"6","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\Item\\Item.js":"7","C:\\xnode\\apps\\YouMayNeedThis\\src\\views\\Home\\Home.js":"8","C:\\xnode\\apps\\YouMayNeedThis\\src\\views\\Products\\Products.js":"9","C:\\xnode\\apps\\YouMayNeedThis\\src\\views\\ProductDetail\\ProductDetail.js":"10"},{"size":262,"mtime":1633045017900,"results":"11","hashOfConfig":"12"},{"size":857,"mtime":1634181798140,"results":"13","hashOfConfig":"12"},{"size":3259,"mtime":1634600004063,"results":"14","hashOfConfig":"12"},{"size":320,"mtime":1634164078019,"results":"15","hashOfConfig":"12"},{"size":2211,"mtime":1634737905335,"results":"16","hashOfConfig":"12"},{"size":1682,"mtime":1634182956747,"results":"17","hashOfConfig":"12"},{"size":693,"mtime":1634592774864,"results":"18","hashOfConfig":"12"},{"size":198,"mtime":1634164724512,"results":"19","hashOfConfig":"12"},{"size":326,"mtime":1634181884961,"results":"20","hashOfConfig":"12"},{"size":1754,"mtime":1634737119369,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19g8vds",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xnode\\apps\\YouMayNeedThis\\src\\index.js",[],["46","47"],"C:\\xnode\\apps\\YouMayNeedThis\\src\\App.js",[],"C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\Navbar\\Navbar.js",["48","49"],"import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/js/dist/dropdown';\r\nimport $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//components\r\nimport CartWidget from '../CartWidget/CartWidget'\r\n\r\nconst Navbar = () => {\r\n    const[categories, setCategories] = useState([]);\r\n    const[dropdown, setDropdown] = useState(false);\r\n    const toggleOpen = () => setDropdown(!dropdown);\r\n    const closeDropdown = () => setDropdown(false);\r\n\r\n    useEffect(async () => {\r\n        fetch('https://fakestoreapi.com/products')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                let cat_arr = [];\r\n                $.each(json, (i, obj) => {\r\n                    if(!cat_arr.includes(obj.category)){\r\n                        cat_arr = [...cat_arr, obj.category];\r\n                    }\r\n                });\r\n                setCategories(cat_arr);\r\n            });\r\n    }, [/*when component did mount*/]); \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\" onClick={closeDropdown}>YouMayNeedThis</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/\" onClick={closeDropdown}>Inicio</Link>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" onClick={toggleOpen} id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Productos\r\n                        </a>\r\n                        <div className={`dropdown-menu ${dropdown ? 'show' : ''}`} aria-labelledby=\"navbarDropdown\">\r\n                            <Link className=\"dropdown-item\" to=\"/Products\" onClick={toggleOpen}>Todos</Link>\r\n                            {categories.map((categ) => {\r\n                                const urlCateg = encodeURIComponent(categ);\r\n                                return(\r\n                                    <Link key={urlCateg} className=\"dropdown-item\" to={`/Products/${urlCateg}`} onClick={toggleOpen}>{categ}</Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/Contact\" onClick={closeDropdown}>Contacto</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/Cart\" onClick={closeDropdown}>\r\n                            <CartWidget itemsCount=\"0\" />\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\CartWidget\\CartWidget.js",[],"C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\ItemCount\\ItemCount.js",["50","51"],"C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\ItemList\\ItemList.js",["52","53","54","55","56","57"],"import React, { useState, useEffect } from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nimport Item from '../Item/Item';\r\n\r\n\r\nconst ItemList = ({ categ }) => {\r\n    const[allProducts, setAllProducts] = useState([]);\r\n    const[products, setProducts] = useState([]);\r\n    const[loading, setLoading] = useState(true);\r\n\r\n\r\n    const updFilteredCateg = (data = null) => {\r\n        let json = allProducts;\r\n        if(data != null)\r\n            json = data;\r\n\r\n        if(categ != \"\")\r\n            json = json.filter((element) => element.category == categ);\r\n\r\n        setProducts(json);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        fetch('https://fakestoreapi.com/products')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setLoading(false);\r\n                setAllProducts(json);\r\n                updFilteredCateg(json);\r\n            });\r\n        \r\n    }, []); //when component did mount\r\n\r\n    useEffect(async () => {\r\n        updFilteredCateg();\r\n    }, [categ]); //when the get var category changes his value, update the visible product list\r\n\r\n    return (\r\n        <div>\r\n            <h1>Productos</h1>\r\n\r\n            <hr/><br/>\r\n\r\n            <Dimmer active={loading}>\r\n                <Loader />\r\n            </Dimmer>\r\n            <div className=\"ui link cards\" style={{textAlign:'center'}}>\r\n                {products.map((user) => {\r\n                    return(\r\n                        <div key={user.id}>\r\n                            <Item data={user} />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList","C:\\xnode\\apps\\YouMayNeedThis\\src\\components\\Item\\Item.js",["58","59","60"],"import userEvent from '@testing-library/user-event'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Item = ({data}) => {\r\n    return (\r\n        <div className=\"ui card\">\r\n            <div className=\"image\">\r\n                <img src={data.image} />\r\n            </div>\r\n            <div className=\"content\">\r\n                <a className=\"header\">{data.title}</a>\r\n                <div className=\"meta\">\r\n                <span className=\"date\">Id: {data.id}</span>\r\n                </div>\r\n            </div>\r\n            <Link to={`/Product-Detail/${data.id}`}>\r\n                Ver detalles\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","C:\\xnode\\apps\\YouMayNeedThis\\src\\views\\Home\\Home.js",[],"C:\\xnode\\apps\\YouMayNeedThis\\src\\views\\Products\\Products.js",[],"C:\\xnode\\apps\\YouMayNeedThis\\src\\views\\ProductDetail\\ProductDetail.js",["61","62","63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":15,"column":15,"nodeType":"71","endLine":27,"endColumn":6},{"ruleId":"72","severity":1,"message":"73","line":41,"column":25,"nodeType":"74","endLine":41,"endColumn":195},{"ruleId":"72","severity":1,"message":"75","line":54,"column":17,"nodeType":"74","endLine":54,"endColumn":47},{"ruleId":"72","severity":1,"message":"75","line":56,"column":17,"nodeType":"74","endLine":56,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":18,"column":18,"nodeType":"78","messageId":"79","endLine":18,"endColumn":20},{"ruleId":"76","severity":1,"message":"80","line":19,"column":62,"nodeType":"78","messageId":"79","endLine":19,"endColumn":64},{"ruleId":"69","severity":1,"message":"70","line":24,"column":15,"nodeType":"71","endLine":33,"endColumn":6},{"ruleId":"69","severity":1,"message":"81","line":33,"column":8,"nodeType":"82","endLine":33,"endColumn":10,"suggestions":"83"},{"ruleId":"69","severity":1,"message":"70","line":35,"column":15,"nodeType":"71","endLine":37,"endColumn":6},{"ruleId":"69","severity":1,"message":"81","line":37,"column":8,"nodeType":"82","endLine":37,"endColumn":15,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":9,"column":17,"nodeType":"74","endLine":9,"endColumn":41},{"ruleId":"72","severity":1,"message":"75","line":12,"column":17,"nodeType":"74","endLine":12,"endColumn":39},{"ruleId":"69","severity":1,"message":"70","line":13,"column":15,"nodeType":"71","endLine":21,"endColumn":6},{"ruleId":"69","severity":1,"message":"91","line":21,"column":8,"nodeType":"82","endLine":21,"endColumn":10,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":40,"column":21,"nodeType":"74","endLine":40,"endColumn":48},{"ruleId":"72","severity":1,"message":"75","line":43,"column":21,"nodeType":"74","endLine":43,"endColumn":43},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'updFilteredCateg'. Either include it or remove the dependency array.","ArrayExpression",["95"],["96"],"no-unused-vars","'userEvent' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [updFilteredCateg]",{"range":"104","text":"105"},"Update the dependencies array to be: [categ, updFilteredCateg]",{"range":"106","text":"107"},"Update the dependencies array to be: [match.params.id]",{"range":"108","text":"109"},[922,924],"[updFilteredCateg]",[1022,1029],"[categ, updFilteredCateg]",[693,695],"[match.params.id]"]